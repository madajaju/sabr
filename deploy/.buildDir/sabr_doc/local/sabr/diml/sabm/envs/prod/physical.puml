@startuml
  interface CLI
  interface Web
  interface WebSocket
package "Sentient Agent Bundle Manager" #ffcc88 {
  component express as REST
  component socket.io as socket
  folder bin #ffffff {
    component " sabr diml sabm" as binName
  }
  binName --> REST

  folder deploy #ffffff {
      file "node server.js\n" as sabr_diml_sabm_container
      REST --> sabr_diml_sabm_container


    file "web" as web_container
    REST --> web_container
    socket ---> web_container

    file "sabr_service" as sabr_service_container
    REST --> sabr_service_container
    socket ---> sabr_service_container

    file "sabr_registry" as sabr_registry_container
    REST --> sabr_registry_container
    socket ---> sabr_registry_container

    file "sabr_builder" as sabr_builder_container
    REST --> sabr_builder_container
    socket ---> sabr_builder_container

  }
  folder images #ffffff {
    collections "sabr_diml_sabm" as sabr_diml_sabmimage
    artifact "ailtire:swarm" as ailtireswarm
    sabr_diml_sabmimage <|-- ailtireswarm
    sabr_diml_sabm_container --> sabr_diml_sabmimage


      artifact "sabr_diml_sabm_web" as sabr_diml_sabm_web
      web_container --> sabr_diml_sabm_web

      artifact "sabr_service" as sabr_service
      sabr_service_container --> sabr_service

      artifact "sabr_registry" as sabr_registry
      sabr_registry_container --> sabr_registry

      artifact "sabr_builder" as sabr_builder
      sabr_builder_container --> sabr_builder

  }
}
CLI " sabr diml sabm" -- binName
Web "/sabr/diml/sabm" - REST
WebSocket ".sabr.diml.sabm" -- socket

@enduml
