<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="226px" preserveAspectRatio="none" style="width:275px;height:226px;background:#000000;" version="1.1" viewBox="0 0 275 226" width="275px" zoomAndPan="magnify"><defs/><g><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="140" x="5" y="19.5332">Dot Executable: null</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="173" x="5" y="37.1426">No dot executable found</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="258" x="5" y="54.752">Cannot find Graphviz. You should try</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="0" x="9" y="72.3613"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="71" x="5" y="89.9707">@startuml</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="50" x="5" y="107.5801">testdot</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="66" x="5" y="125.1895">@enduml</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="0" x="9" y="142.7988"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="15" x="9" y="160.4082">or</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="0" x="9" y="178.0176"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="201" x="5" y="195.627">java -jar plantuml.jar -testdot</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="0" x="9" y="213.2363"/><!--
@startuml


package "Service Orchestrator" #aaffaa {
    }

package "Application Manager" #00aaff {
    
        class Stack {
        }
    
        class ApplicationInstance {
        }
    
        class Application {
        }
    
        class Service {
        }
    
        class ServiceInstance {
        }
    
        class StackInstance {
        }
    }


package "Application Manager" #00aaff {

    interface "Application Manager" as i {
            /sabr/aml/am/application create()
            /sabr/aml/am/application/create()
            /sabr/aml/am/application/destroy()
            /sabr/aml/am/application/list()
            /sabr/aml/am/application/update()
            /sabr/aml/am/service/deployed()
            /sabr/aml/am/service/kill()
            /sabr/aml/am/service/provision()
            /sabr/aml/am/service/stderr()
            /sabr/aml/am/service/stdout()
    
    }
}

CLI ()- - i
REST ()- - i
Web ()- - i

package "Application Manager" #00aaff {
        class "Application" {
                 string name
                 string version
                 ref fn
                    }
                Application *- -> "n" Stack : stacks
                        Application *- -> "n" ApplicationInstance : instances
            
    
    class "ApplicationInstance" {
                 string name
                 string status
                 string message
                    }
                ApplicationInstance o- -> "1" Application : app
            
    
    class "Service" {
                 string name
                 string command
                 string version
                 json ports
                 json expose
                 json parameters
                 json environment
                 ref provisionScript
                    }
                Service o- -> "1" Stack : stack
                        Service o- -> "n" Service : children
                        Service o- -> "1" Service : parent
                        Service *- -> "n" ServiceInstance : instances
            
    
    class "ServiceInstance" {
                 string name
                 string pid
                 string url
                 string stdout
                 string stderr
                             launched()
                     provision()
            }
                ServiceInstance o- -> "1" Service : parent
                        ServiceInstance o- -> "1" StackInstance : stack
            
    
    class "Stack" {
                 string name
                 string command
                 string version
                 json ports
                 json expose
                 json parameters
                 json environment
                 ref provisionScript
                    }
                Stack *- -> "n" Service : services
                        Stack *- -> "n" StackInstance : instances
                        Stack o- -> "1" Application : app
                        Stack o- -> "1" Stack : stack
                        Stack o- -> "n" Service : children
                        Stack o- -> "1" Service : parent
            
    
        Service <|- - Stack
    
    class "StackInstance" {
                 string name
                 string stdout
                 string stderr
                 string pid
                 string url
                             launched()
                     provision()
            }
                StackInstance o- -> "1" ApplicationInstance : app
                        StackInstance o- -> "1" Stack : stack
                        StackInstance *- -> "n" ServiceInstance : services
                        StackInstance o- -> "1" Service : parent
            
    
        ServiceInstance <|- - StackInstance
    

}


    "Application Manager" - -> "Service Orchestrator"


@enduml

PlantUML version 1.2019.05(Sat Apr 20 09:45:36 PDT 2019)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Java Version: 17.0.7+8-LTS-224
Operating System: Windows 11
OS Version: 10.0
Default Encoding: Cp1252
Language: en
Country: US
--></g></svg>